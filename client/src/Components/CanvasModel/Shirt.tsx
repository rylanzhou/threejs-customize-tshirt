import { Decal, useGLTF, useTexture } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { easing } from 'maath';
import React, { useMemo, useRef } from 'react';
import { GLTF } from 'three-stdlib';
import { useSnapshot } from 'valtio';

import { HexColorString } from 'three';
import state from '../../store';

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx ./public/shirt_baked.glb -t
Node 18 not supported
*/
type GLTFResult = GLTF & {
  nodes: {
    T_Shirt_male: THREE.Mesh;
  };
  materials: {
    lambert1: THREE.MeshStandardMaterial;
  };
};

export default function Shirt() {
  const group = useRef<THREE.Group>(null);

  const snap = useSnapshot(state);
  const { nodes, materials } = useGLTF('./shirt_baked.glb') as GLTFResult;

  const logoTexture = useTexture(snap.logoDecal);
  const fullTexture = useTexture(snap.fullDecal);

  useFrame((state, delta) =>
    easing.dampC(materials.lambert1.color, snap.color as HexColorString, 0.25, delta),
  );

  const snapString = useMemo(() => JSON.stringify(snap), [snap]);

  return (
    /* eslint-disable react/no-unknown-property */

    // add "key" to group to force re-render when snap changes
    <group key={snapString} ref={group} dispose={null}>
      <mesh castShadow geometry={nodes.T_Shirt_male.geometry} material={materials.lambert1}>
        {snap.isFullTexture ? (
          <Decal position={[0, 0, 0]} rotation={[0, 0, 0]} scale={1} map={fullTexture} />
        ) : null}

        {snap.isLogoTexture ? (
          <Decal
            position={[0, 0.04, 0.15]}
            rotation={[0, 0, 0]}
            scale={0.15}
            map={logoTexture}
            map-anisotropy={16}
            depthTest={false}
            depthWrite={true}
          />
        ) : null}
      </mesh>
    </group>
  );
}

useGLTF.preload('./shirt_baked.glb');
